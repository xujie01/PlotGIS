define(["dojo/_base/declare", "dojo/_base/lang","./PlotUtil"],     function (declare, lang, PlotUtil) {    var clazz = declare([], {        //三箭头        state: "editing",        constructor: function (opitons) {            if (this.id == null) {                this.id = "MultiArrowDrawer"            }        },        headHeightFactor: 0.15,        headWidthFactor: 0.4,        neckHeightFactor: 0.75,        neckWidthFactor: 0.15,        tailWidthFactor: 0.1,        headRightPnt: null,        neckPnt: null,        headpoints: null,        secendheadpoints: null,        threeheadpoints: null,        firstLeftPoints: null,        firstRightPoints: null,        secendRightPoints: null,        firstPoint: null,        getPoints: function (points) {            var pntsLen = points.length;            if ((pntsLen == 2 || pntsLen == 3) && points[(pntsLen - 1)] != points[pntsLen - 2]) {                this.firstPoint = points[0];                this.headpoints = PlotUtil.getArrowHeadPoints(points, this.headHeightFactor, this.headWidthFactor, this.neckHeightFactor, this.neckWidthFactor);                var headPnt0 = this.headpoints[0];                var headPnt4 = this.headpoints[4];                var arrowPnts1 = PlotUtil.getArrowBodyPoints(points, headPnt0, headPnt4, this.tailWidthFactor);                var arrowPnts = PlotUtil.getArrowTailPoints(points, this.tailWidthFactor, false, 0);                var arrowPnt0 = arrowPnts[0];                var arrowPntLen1 = arrowPnts1.length;                var arrowPntLen2 = arrowPnts1.slice(0, arrowPntLen1 / 2);                arrowPntLen2.push(headPnt0);                arrowPntLen2 = arrowPntLen2.reverse();                arrowPntLen2.push(arrowPnt0);                this.firstLeftPoints = PlotUtil.getBSplinePoints(arrowPntLen2);                this.firstLeftPoints.reverse();                return PlotUtil.getArrowPlot(points, false, 0, PlotUtil.USEBEZIERFIT, this.headHeightFactor, this.headWidthFactor, this.neckHeightFactor, this.neckWidthFactor, this.tailWidthFactor)            } else {                if (pntsLen == 4) {                } else {                    if (pntsLen == 5 || pntsLen == 6) {                        if (this.state == "editing") {                            var pnts1 = points.slice();                            pnts1 = pnts1.splice(0, 3);                            this.firstPoint = points[0];                            this.headpoints = PlotUtil.getArrowHeadPoints(pnts1, this.headHeightFactor, this.headWidthFactor, this.neckHeightFactor, this.neckWidthFactor);                            var headPnt0 = this.headpoints[0];                            var headPnt4 = this.headpoints[4];                            var arrowPnts1 = PlotUtil.getArrowBodyPoints(pnts1, headPnt0, headPnt4, this.tailWidthFactor);                            var arrowPnts = PlotUtil.getArrowTailPoints(pnts1, this.tailWidthFactor, false, 0);                            var arrowPnt0 = arrowPnts[0];                            var arrowPntLen1 = arrowPnts1.length;                            var arrowPntLen2 = arrowPnts1.slice(0, arrowPntLen1 / 2);                            arrowPntLen2.push(headPnt0);                            arrowPntLen2 = arrowPntLen2.reverse();                            arrowPntLen2.push(arrowPnt0);                            this.firstLeftPoints = PlotUtil.getBSplinePoints(arrowPntLen2);                            this.firstLeftPoints.reverse()                        }                        points = points.slice(3, points.length);                        this.secendheadpoints = PlotUtil.getArrowHeadPoints(points, this.headHeightFactor, this.headWidthFactor, this.neckHeightFactor, this.neckWidthFactor);                        var headPnt0 = this.secendheadpoints[0];                        var headPnt4 = this.secendheadpoints[4];                        var arrowPnts1 = PlotUtil.getArrowBodyPoints(points, headPnt0, headPnt4, this.tailWidthFactor);                        var arrowPnts = PlotUtil.getArrowTailPoints(points, this.tailWidthFactor, false, 0);                        var tempArrowPnt = arrowPnts.length == 3 ? (arrowPnts[2]) : (arrowPnts[1]);                        var arrowPntLen1 = arrowPnts1.length;                        var tempArrowPnt1 = arrowPnts1.slice(arrowPntLen1 / 2, arrowPntLen1);                        tempArrowPnt1.push(headPnt4);                        tempArrowPnt1 = tempArrowPnt1.reverse();                        tempArrowPnt1.push(tempArrowPnt);                        this.secendRightPoints = PlotUtil.getBezierPoints(tempArrowPnt1);                        this.secendPoint = this.secendRightPoints[this.secendRightPoints.length - 1];                        var headPnts = [];                        if (pntsLen == 5) {                            headPnts.push(this.headpoints[4], this.firstPoint, points[0], this.secendheadpoints[0])                        }                        if (pntsLen == 6) {                            headPnts.push(this.headpoints[4], this.firstPoint, points[0], points[1], this.secendheadpoints[0])                        }                        this.firstRightPoints = PlotUtil.getBezierPoints(headPnts);                        var points = this.firstLeftPoints.concat(this.headpoints, this.firstRightPoints, this.secendheadpoints, this.secendRightPoints);                        return points                    } else {                        if (pntsLen == 7) {                        } else {                            if (pntsLen == 8 || pntsLen == 9) {                                if (this.state == "editing") {                                    this.firstPoint = points[0];                                    var V = points.slice();                                    V = V.splice(0, 3);                                    this.headpoints = PlotUtil.getArrowHeadPoints(V, this.headHeightFactor, this.headWidthFactor, this.neckHeightFactor, this.neckWidthFactor);                                    var headPnt0 = this.headpoints[0];                                    var headPnt4 = this.headpoints[4];                                    var arrowPnts1 = PlotUtil.getArrowBodyPoints(V, headPnt0, headPnt4, this.tailWidthFactor);                                    var arrowPnts = PlotUtil.getArrowTailPoints(V, this.tailWidthFactor, false, 0);                                    var arrowPnt0 = arrowPnts[0];                                    var arrowPntLen1 = arrowPnts1.length;                                    var arrowPntLen2 = arrowPnts1.slice(0, arrowPntLen1 / 2);                                    arrowPntLen2.push(headPnt0);                                    arrowPntLen2 = arrowPntLen2.reverse();                                    arrowPntLen2.push(arrowPnt0);                                    this.firstLeftPoints = PlotUtil.getBSplinePoints(arrowPntLen2);                                    this.firstLeftPoints.reverse();                                    var pnts1 = points.slice();                                    pnts1 = pnts1.splice(3, pntsLen == 8 ? 2 : 3);                                    this.secendheadpoints = PlotUtil.getArrowHeadPoints(pnts1, this.headHeightFactor, this.headWidthFactor, this.neckHeightFactor, this.neckWidthFactor);                                    var headPnt0 = this.secendheadpoints[0];                                    var headPnt4 = this.secendheadpoints[4];                                    var arrowPnts1 = PlotUtil.getArrowBodyPoints(pnts1, headPnt0, headPnt4, this.tailWidthFactor);                                    var arrowPnts = PlotUtil.getArrowTailPoints(pnts1, this.tailWidthFactor, false, 0);                                    var tempArrowPnt = arrowPnts.length == 3 ? (arrowPnts[2]) : (arrowPnts[1]);                                    var arrowPntLen1 = arrowPnts1.length;                                    var tempArrowPnt1 = arrowPnts1.slice(arrowPntLen1 / 2, arrowPntLen1);                                    tempArrowPnt1.push(headPnt4);                                    tempArrowPnt1 = tempArrowPnt1.reverse();                                    tempArrowPnt1.push(tempArrowPnt);                                    this.secendRightPoints = PlotUtil.getBezierPoints(tempArrowPnt1);                                    this.secendPoint = this.secendRightPoints[this.secendRightPoints.length - 1];                                    var headPnts = [];                                    if (pntsLen == 8) {                                        headPnts.push(this.headpoints[4], this.firstPoint, pnts1[0], this.secendheadpoints[0])                                    }                                    if (pntsLen == 9) {                                        headPnts.push(this.headpoints[4], this.firstPoint, pnts1[0], pnts1[1], this.secendheadpoints[0])                                    }                                    this.firstRightPoints = PlotUtil.getBezierPoints(headPnts)                                }                                points = points.slice(6, points.length);                                this.threeheadpoints = PlotUtil.getArrowHeadPoints(points, this.headHeightFactor, this.headWidthFactor, this.neckHeightFactor, this.neckWidthFactor);                                var headPnt0 = this.threeheadpoints[0];                                var headPnts = [];                                if (pntsLen == 8) {                                    headPnts.push(this.secendheadpoints[4], this.secendPoint, points[0], this.threeheadpoints[0])                                }                                if (pntsLen == 9) {                                    headPnts.push(this.secendheadpoints[4], this.secendPoint, points[0], points[1], this.threeheadpoints[0])                                }                                this.secendRightPoints = PlotUtil.getBezierPoints(headPnts);                                var tHeadPnt4 = this.threeheadpoints[4];                                var arrowPnts1 = PlotUtil.getArrowBodyPoints(points, headPnt0, tHeadPnt4, this.tailWidthFactor);                                var arrowPnts = PlotUtil.getArrowTailPoints(points, this.tailWidthFactor, false, 0);                                var tempArrowPnt = arrowPnts.length == 3 ? (arrowPnts[2]) : (arrowPnts[1]);                                var arrowPntLen1 = arrowPnts1.length;                                var tempArrowPnt1 = arrowPnts1.slice(arrowPntLen1 / 2, arrowPntLen1);                                tempArrowPnt1.push(tHeadPnt4);                                tempArrowPnt1 = tempArrowPnt1.reverse();                                tempArrowPnt1.push(tempArrowPnt);                                this.threeRightPoints = PlotUtil.getBezierPoints(tempArrowPnt1);                                var points = this.firstLeftPoints.concat(this.headpoints, this.firstRightPoints, this.secendheadpoints, this.secendRightPoints, this.threeheadpoints, this.threeRightPoints);                                return points                            }                        }                    }                }            }            if (pntsLen == 0) {            }            return null        }    });    return clazz});