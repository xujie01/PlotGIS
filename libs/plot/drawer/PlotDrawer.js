define(["dojo/_base/lang","./SimpleArrowDrawer", "./TailedArrowDrawer", "./DouleArrowDrawer", "./MultiArrowDrawer",        "./AssemblyAreaDrawer", "./TriangleFlagDrawer","./RectFlagDrawer", "./CustomTailedArrowDrawer",        "./CustomArrowDrawer", "./StraightArrowDrawer", "./HalfCircleDrawer","./PlotTypes"],    function (lang, SimpleArrowDrawer, TailedArrowDrawer, DouleArrowDrawer, MultiArrowDrawer, AssemblyAreaDrawer,              TriangleFlagDrawer,RectFlagDrawer, CustomTailedArrowDrawer, CustomArrowDrawer, StraightArrowDrawer,              HalfCircleDrawer,PlotTypes) {    var clazz = {};    clazz.createDrawer = function (plotType) {        var drawGraphic = null;        switch (plotType) {            case PlotTypes.SIMPLE_ARROW:                drawGraphic = new SimpleArrowDrawer();                break;            case PlotTypes.STRAIGHT_ARROW:                drawGraphic = new StraightArrowDrawer();                break;            case PlotTypes.CUSTOM_ARROW:                drawGraphic = new CustomArrowDrawer();                break;            case PlotTypes.TAILED_ARROW:                drawGraphic = new TailedArrowDrawer();                break;            case PlotTypes.CUSTOM_TAILED_ARROW:                drawGraphic = new CustomTailedArrowDrawer();                break;            case PlotTypes.DOUBLE_ARROW:                drawGraphic = new DouleArrowDrawer();                break;            case PlotTypes.MULTI_ARROW:                drawGraphic = new MultiArrowDrawer();                break;            case PlotTypes.ASSEMBLY_AREA:                drawGraphic = new AssemblyAreaDrawer();                break;            case PlotTypes.TRIANGLE_FLAG:                drawGraphic = new TriangleFlagDrawer();                break;            case PlotTypes.RECT_FLAG:                drawGraphic = new RectFlagDrawer();                break;            case PlotTypes.HALF_CIRCLE:                drawGraphic = new HalfCircleDrawer();                break        }        return drawGraphic    };    clazz.createDrawPoints = function (geometryType, points) {        var plotType = this.createDrawer(geometryType);        var pnts = plotType.getPoints(points);        pnts.push(lang.clone(pnts[0]));        return pnts;    };    return clazz});